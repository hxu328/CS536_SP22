//* nonterminals: program, declList(epsilon)
//* begin of the program (one line program)
void wrapper(){if (b == -1) { x = 4+3*5-y; while (c) { y = y*2+x; } } else { x = 0; }}
% end of the program



//* nonterminals: declList, decl, varDecl, structDecl, structBody

//* varDecl
//* same indent with program and varDeclList
    //* 4 behind structDecl)
int a;
bool b ;
   void c  ;
   struct d  f ;

struct k p;

struct g { int a; bool b; void c; struct d f;};
    struct g { 
        int a; bool b; void c; struct d f;};

//* structDecl
//* same indent with program
struct g { int a; bool b; void c; struct d f;};
    struct g { int a; bool b; void c; struct d f;};



//* nonterminals: fnDecl, formals(can be empty), formalsList, formalDecl, fnBody, varDeclList(can be empty)
//*               varDecl(4 indent behind fnDecl, if, while), stmtList(can be empty), stmt(indent as stmtList),
//*               assignExp(indent as stmt), exp(0 indent), term(same as exp or after MINUS),
//*               fncall(same as term OR stmt), actualList(after LPAREN)

//* function with empty foramls, empty varDeclList and empty stmtList
    int main  (){}

//* function with empty formals, nonempty varDeclList and empty stmtList
int foo () {int a; bool b; void c; struct e d;}
int foo1 () {int a;}

//* function with nonempty formals, nonempty varDeclList and empty stmtList
int foo2 ( int a, int   b) {int c;}
    bool foo3(int c) {struct k f;}

//************************* Nonempty stmtList ************************//

void fnc(int a, int b) {
    int c;

    a = (((a + a) * (a - a)) / (a + a));
    //* loc
    a++;
    c = 0;
    a = a + a;
    a.a = a + a;
    a.a.a = a + a;

    //* exp
    a = b = c;
    a = b;
    a = b.b;
    a = 1;
    a = "1";
    a = true;
    a = false;
    a = (a=b);
    a = (a=b) + (a=c);
    a = (a=b) - (a=b);
    a = (a=b) * (a=b);
    a = (a=b) / (a=b);
    a = !(a=b);
    a = (a=b) && (a=b);
    a = (a=b) || (a=b);
    a = (a=b) == (a=b);
    a = (a=b) != (a=b);
    a = (a=b) < (a=b);
    a = (a=b) > (a=b);
    a = (a=b) <= (a=b);
    a = (a=b) >= (a=b);
    a = -a;
    a = -1;
    a = -"1";
    a = -true;
    a = -false;
    a = a();
    a = a((a=b));
    a = a((a=b), (a=b));
    a = (a+a) * (a-a) / (a+a);

    //* stmt
    a++;
    a.a++;
    a.a.a ++;

    a--;
    a.a--;
    a.a.a --;

    input >> a.a;
    input>>a;

    disp<<(a=a);

    if (a == 1) {
        int a; int b; a = 1; b = 2;
        if (a == 1) {int a; int b; a = 1; b = 2;} else {int a; int b; a = 1; b = 2;}
        }
    if (a == 1) {int a; int b; a = 1; b = 2;} else {int a; int b; a = 1; b = 2;}
    while(a == 1) {int a; int b; a = 1; b = 2;}

    return a==1;
    return ;
    a();
    a(a==1, a==2);
    a = !(!(!a));
    a = a + a + a;
    a = !(a + !(a));
    a = -a.a;
    a = -(a.a);
    a = -(a + a);
    a = -(a+-(a + -(a)));
    a = (-true);
}