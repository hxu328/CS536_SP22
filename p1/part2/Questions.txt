1. HashMap is preferable as its containsKey, get, put and remove operations have time complxity O(1), wheras these operations cost O(logN) for TreeMap. TreeMap will be preferable to HashMap when we want to exploit the sorted nature of its keys. For example, when we are searching according to upper and lower key bounds, finding a key that is closest to a given value, or returning a sorted sequence of all keys. 
2. I chose LinkedList. In my implementation, the nearest scope is represented as the first element (index 0) of the list, where removeScope() removes the element at the index 0, and addScope() inserts a new element at the index 0. For LinkedList, these operations have time compexity O(1). However, for ArrayList, these operations have time complexity O(N), where N is the length of the list. Hence, for me, LinkedList allows faster implementation.
